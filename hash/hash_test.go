package hash

import (
	"testing"
)

const (
	single = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
	input  = single + single + single + single
)

func TestHash(t *testing.T) {
	key := [32]byte{}
	results := [...]uint64{
		0xF7F7F7F7F7F7F7F7, 0xB01ED6E19CA84A5C, 0xCC43B481D757355A, 0xB61F4497E04CB8A9,
		0x660FE4786EDA8C95, 0xC270832B4DF88E7A, 0x117193DCA18FD252, 0xF26C90DF950B85A9,
		0x801D462FAE97CA23, 0xC698FF35247A54C0, 0xC9969CAC376E7E57, 0x7306E0CB8705E94F,
		0xB2E61BFE60874AAB, 0x428CF6B9699E9B96, 0xFFE6239A6188C8F2, 0xFE6AC1FA04FB9D52,
		0x60378775380EA086, 0x918C95CC44058512, 0xA6D061063982F730, 0xB7EAA68FAA7B64CC,
		0xD064EE6949F94383, 0x4AFDC9EBF7F3CD69, 0x98ED42E5A0B4F695, 0x1C5D947E63873BBE,
		0xBBE2069EB09A691E, 0xEA47B5A359CFA5B8, 0xFB744C98B9ABCCDD, 0xDB6BA903C5DB922B,
		0x16C10083350AE3A2, 0x895A7BBFE888DEBB, 0xFA56AFD7BC886E05, 0xE31118F1D2388101,
		0xB6CD260AE388D055, 0x28458BCA20524BB3, 0x4DAE88D34ABFD958, 0xBF0E12477AAB2F11,
		0xFBBBB0ACE597F087, 0x0D516FC0DF59F753, 0x31A78CFDC5805EC6, 0xDB1DCB7485471DE6,
		0x20F2C7B02164ADE8, 0xA51C6839F4907390, 0x14FFEBB9E5FB5D7C, 0xB3AA03F49D1958CF,
		0x326F02E86A21183C, 0x2B7C3DBCD1216A9F, 0xD85429170FF8715B, 0x8CFBBF218CABE377,
		0x972050B9B7B1CFCE, 0x580D5160E7C03802, 0xBE57322C5DCD91AA, 0x0785CBFE86F9BAE4,
		0xEF9E8E0A7770FD68, 0x97B1E4D921954AF2, 0x106C9F43B0A0ABC5, 0xCDF2A84885604943,
		0xFD0E9914EE0DB352, 0x27879917A1CA4462, 0x609CC07BF14970F2, 0xC78BB0B06AD36051,
		0xED338BCD7BBF57DD, 0x3B90B156ABFD6EB1, 0x2540AC0C6BFDBF04, 0xA5264FE1D8D60BF2,
		0x9F477DE97DF1804B, 0x3A1205D4D9EFA2B7, 0x718CF218F0513ECE, 0xF319B72AB5A228DF,
		0x1AACECC92E8CA92A, 0x194194CFC78ABD91, 0x6710B3D62FB6390B, 0x17F3162BE82A30B9,
		0xFF1EA68C366DBB49, 0xA6CBFF3AB7EF8002, 0xB80EF037DA7745EC, 0xCD7238573159A309,
		0xE26119145F2BCFA7, 0xE72E8318C619C6DE, 0xE728710B035D44B8, 0xD2916FB7A0B7A10B,
		0x45FC3E0341DE72EF, 0x253B521A31DBA24C, 0x376B50F056A51D55, 0xEE7E3D9BB0190DE6,
		0x8B6801FB5CA2C286, 0xA79AC7CDBB6495CD, 0x608D5C49DD8CDA28, 0xD45B0682FD631A63,
		0x2343236BCF83B2C0, 0x806F92157B020A02, 0x91F2431BBB3B877F, 0xA31C8FABCD48AB32,
		0x30E6D7E142199812, 0xF0C20D808A87F23E, 0xCA3E0E14EB4233B2, 0xE732EF3C5CFC99AB,
		0x8F0FDCDDB1A8E142, 0x8924027370926191, 0x075B736278217870, 0x451CF7010933A990,
		0x711A19EF70CD69C4, 0x9F55CF5C75990F95, 0x9443BE47AA8A6E80, 0xAA247C81EFE7E763,
		0x15388AF1505A35BE, 0xF284726FF59FD3B5, 0x9B38C3167DA284B5, 0x37FD937C819BD937,
		0x20E6AC50A4DCC5E6, 0x2D45FCC5FAB98342, 0x7649AE04A4C75092, 0xB965E8FDC534CF53,
		0x6B910084BD57A4A2, 0x5FEEEF92763AB260, 0xA4B47EBC4D4E1954, 0xF6E608E10CA6FE8B,
		0x3DF7DD4809D6B782, 0xEFEE609FAFB717A1, 0x1B78ECCCBD77B0A6, 0xC2D37F24179B7100,
		0xF122C4B064F7FE93, 0xF705BB814258216A, 0xFA07267A105A31C7, 0x1303D3F6D0D5868F,
		0x10FA9AF271583807, 0xFC94A5E98587C60B, 0xAC584703FD5F5B51, 0xEA4E37A3601CE7E7,
	}

	for i := 0; i < len(results); i++ {
		expect := results[i]
		actual := aes(input[:i], &key[0])
		if expect != actual {
			t.Fatalf("length %d failed: expect=0x%016X actual=0x%016X", i, expect, actual)
		}
	}
}

func BenchmarkHash(b *testing.B) {
	key := [32]byte{}

	b.Run("16B", func(b *testing.B) {
		for i := 0; i < b.N; i++ {
			aes(input[:64], &key[0])
		}
		b.SetBytes(16)
	})

	b.Run("256B", func(b *testing.B) {
		for i := 0; i < b.N; i++ {
			aes(input, &key[0])
		}
		b.SetBytes(256)
	})
}
